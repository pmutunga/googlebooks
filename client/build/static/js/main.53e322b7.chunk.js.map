{"version":3,"sources":["components/Input/index.js","components/Button/index.js","utils/API.js","components/Thumbnail/index.js","components/Grid/index.js","components/BookList/index.js","components/Nav/index.js","components/Jumbotron/index.js","pages/Search.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Input","props","react_default","a","createElement","className","Object","assign","type","Button","_ref","_ref$type","children","onClick","concat","join","API","searchBooks","query","axios","get","params","then","results","data","getBooks","getBook","id","saveBook","bookData","console","log","post","deleteBook","delete","Thumbnail","src","role","aria-label","style","backgroundImage","Container","fluid","Row","_ref2","Col","_ref3","size","split","map","BookList","BookListItem","_ref2$thumbnail","thumbnail","book_id","title","authors","description","link","handleBook","action","components_Thumbnail","components_Button","rel","target","href","Nav","data-toggle","data-target","aria-controls","aria-expanded","Jumbotron","Search","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","q","res","setState","result","catch","err","handleInputChange","event","_event$target","name","value","defineProperty","handleFormSubmit","preventDefault","state","bookSearch","books","items","handleSaveBook","bind","assertThisInitialized","key","_this2","_this3","components_Nav","components_Jumbotron","components_Input","onChange","placeholder","length","book","volumeInfo","industryIdentifiers","identifier","infoLink","imageLinks","smallThumbnail","Component","Saved","loadBooks","handleDeleteBook","bookdata","_id","App","BrowserRouter","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.53e322b7.chunk.js","sourcesContent":["import React from \"react\";\n\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div className=\"input-group input-group-lg\"> \n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn btn-lg book-btn\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;","import axios from \"axios\";\n\n\nexport default {\n  // The searchBooks method retrieves books from googlebooks\n// It accepts the baseurl and a \"query\" or term to search the google api\n  searchBooks: function(query) {\n   return axios\n    .get(\"https://www.googleapis.com/books/v1/volumes\", {\n      params: query\n    })\n    .then(results => (results.data))\n\n  },\n   // Gets all books from the database\n  getBooks: function() {\n    return axios(\"/api/saved\");\n    // return axios(\"/api/books/saved\";\n  },\n    // Gets the book with the given id\n    getBook: function(id) {\n      return axios.get(\"/api/saved/\" + id);\n      // return axios.get(\"/api/books/\" + id);\n    },\n   // Saves a book to the database\n  saveBook: function(bookData) {\n   console.log(\"API.js/saveBook sending bookData to booksController.js \");\n    return axios.post(\"/api/saved\", bookData);\n  },\n   // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/saved/\" + id)\n    // return axios.delete(\"/api/books/delete/\" + id);\n  }\n};","import React from \"react\";\nimport \"./style.css\";\n\n// The Thumbnail component renders a div that uses some CSS to render a background image\n// It will always keep square proportions at any size without the image warping\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\nfunction Thumbnail({ src }) {\n  return (\n    <div\n      className=\"thumbnail\"\n      role=\"img\"\n      aria-label=\"Recipe Image\"\n      style={{\n        backgroundImage: `url(${src})`\n      }}\n    />\n  );\n}\n\nexport default Thumbnail;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Thumbnail from \"../Thumbnail\";\nimport { Container, Row, Col } from \"../Grid\";\nimport Button from \"../Button\";\n\n\n// Exporting both BookList and BookListItem from this file\n\n// BookList renders a bootstrap list item\nexport function BookList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n// BookListItem renders a bootstrap list item containing data from the book api call\nexport function BookListItem({\n  thumbnail = \"https://placehold.it/300x300\",\n  book_id,\n  title,\n  authors,\n  description,\n  link,\n  handleBook,\n  action,\n  type\n\n}) \n\n{\n  return (\n    <li className=\"list-group-item\">\n      <Container>\n        <Row>\n          <Col size=\"xs-4 sm-2\">\n            <Thumbnail src={thumbnail} />\n          </Col>\n          <Col size=\"xs-8 sm-9\">\n          {/* <button onClick={()=>{\n            handleSaveBook({\n            book_id,\n            thumbnail,\n            title,\n            authors,\n            description,\n            link\n            })\n\n          }} className=\"save-btn btn btn-outline-primary justify-content-end\">Save</button> */}\n                    <Button\n                        onClick={()=>{\n                          handleBook({\n                          book_id,\n                          thumbnail,\n                          title,\n                          authors,\n                          description,\n                          link})\n                          } }                  \n                        type={type}\n                        className=\"input-lg book-btn\"\n                      >\n                       { action}\n                      </Button>\n            <h3>{title}</h3>\n            <p>Authors: {authors}</p>\n            <p>Description: {description}</p>\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={link}>\n              Preview\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    </li>\n  );\n}\n","import React from \"react\";\n\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" href=\"/\">\n              Home <span className=\"sr-only\">(current)</span>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/saved\">\n              Saved\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\n// function Jumbotron({ children }) {\n//   return (\n//     <div\n//       style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n//       className=\"jumbotron\"\n//     >\n//       {children}\n//     </div>\n//   );\n// }\n\nfunction Jumbotron() {\n  return(\n  <div className=\"jumbotron text-center\">\n  <div className = \"textWrapper\">\n    <h1 className=\"display-4\">React Google Books Search</h1>\n    <p className=\"lead\">\n      Search for and Save Books of Interest.\n    </p>\n    <hr />\n    <p className=\"small\">\n      <a href=\"https://books.google.com/\">Powered by Google Books</a>\n    </p>\n    </div>\n  </div>\n  )\n}\nexport default Jumbotron;\n","import React, { Component } from \"react\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport API from \"../utils/API\";\nimport { BookList, BookListItem } from \"../components/BookList\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport \"./Pages.css\"\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleSaveBook = this.handleSaveBook.bind(this);\n\n    this.state = {\n      books: [],\n      bookSearch: \"\",\n      title: \"\",\n      authors: \"\",\n      description: \"\",\n      link: \"\",\n      thumbnail: \"\",\n      key: \"\",\n     \n    };\n  }\n\n  // When this component mounts, search for the book \"P is for Potty\"\n  componentDidMount() {\n\n    const loadquery = \"react\";\n        // https://www.googleapis.com/books/v1/volumes?q=p+is+for+potty\n    //not sure why this renders as https://www.googleapis.com/books/v1/volumes?query=react \n    API.searchBooks({ q: loadquery })\n    .then(res => {\n      // console.log(res.items);\n      this.setState({ books: res.items });\n    })\n    .catch(err => console.log(err));\n  }\n\n  searchBooks = query => {\n    API.searchBooks({q: query})\n      .then(res => this.setState({ result: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get books update the books state\n    event.preventDefault();\n\n    // console.log(\n    //   \"handleFormSubmit in client/src/app.js captured this user input \" +\n    //     this.state.bookSearch\n    // );\n    API.searchBooks({ q: this.state.bookSearch })\n      .then(res => {\n        // console.log(res.items);\n        this.setState({ books: res.items });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleSaveBook = (bookData) => {\n    // event.preventDefault();\n    // console.log(\"Button clicked\");\n    // console.log(bookData);//why doesn't bookdata include the key?\n    // const { title, authors, description, link, thumbnail } = book;\n    API.saveBook({\n      //I have book data in books\n      \"book_id\": bookData.book_id,\n      \"title\": bookData.title,\n      \"authors\": bookData.authors,//How do I splice the array and join with comma?\n      \"description\":  bookData.description,\n      \"link\": bookData.link,\n      \"thumbnail\": bookData.thumbnail\n    })\n      // .then(res => this.loadBooks())\n      .then(console.log(\"saved\" ))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Jumbotron />\n        <Container>\n          <Row>\n            <Col size=\"md-12\">\n              <form>\n                <Container>\n                  <Row>\n                    <Col size=\"xs-9 sm-10\">\n                      <Input\n                        name=\"bookSearch\"\n                        value={this.state.bookSearch}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Search For a Book\"\n                      />\n                    </Col>\n                    <Col size=\"xs-3 sm-2\">\n                      <Button\n                        onClick={this.handleFormSubmit}\n                        type=\"success\"\n                        className=\"input-lg\"\n                      >\n                        Search\n                      </Button>\n                    </Col>\n                  </Row>\n                </Container>\n              </form>\n              <br />\n              <hr />\n            </Col>\n          </Row>\n          <Row>\n            <Col size=\"xs-12\">\n              {!this.state.books.length ? (\n                <h1 className=\"text-center\">No books to Display</h1>\n              ) : (\n                <BookList>\n                  {this.state.books.map(book => {\n                    return (\n                      <div>\n                      <BookListItem\n                        key={book.volumeInfo.industryIdentifiers[0].identifier}\n                        book_id={book.volumeInfo.industryIdentifiers[0].identifier}\n                        title={book.volumeInfo.title}\n                        link={book.volumeInfo.infoLink}\n                        // How do join with a comma?\n                        authors={book.volumeInfo.authors.join(\",\")}\n                        description={book.volumeInfo.description}\n                        thumbnail={book.volumeInfo.imageLinks.smallThumbnail}\n                        handleBook={this.handleSaveBook}\n                        action=\"Save\"\n                        type=\"primary\"\n                      />\n                     \n                      </div>\n                    );\n                  })}\n                </BookList>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { BookList, BookListItem } from \"../components/BookList\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport Nav from \"../components/Nav\";\r\nimport \"./Pages.css\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  // When this component mounts, sload all books\"\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res => this.setState({ books: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleDeleteBook = bookdata => {\r\n    // console.log(bookdata.book_id);\r\n    const id=bookdata.book_id;\r\n    API.deleteBook(id)\r\n    .then(res=>{this.loadBooks()})\r\n    // .then(console.log(\"deleteBook has deleted this book\"))\r\n    .catch(err=> console.log(err))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav />\r\n        <Container>\r\n          <Row>\r\n            <Col size=\"xs-12\">\r\n              {!this.state.books.length ? (\r\n                <h1 className=\"text-center\">No books to Display</h1>\r\n              ) : (\r\n                <BookList>\r\n                  {this.state.books.map(book => {\r\n                    return (\r\n                      <div>\r\n                        <BookListItem\r\n                          key={book._id}\r\n                          book_id={book._id}\r\n                          title={book.title}\r\n                          link={book.link}\r\n                          authors={book.authors}\r\n                          description={book.description}\r\n                          thumbnail={book.thumbnail}\r\n                          handleBook={this.handleDeleteBook}\r\n                          action=\"Delete\"\r\n                          type=\"danger\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </BookList>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Search from \"./pages/Search\";\r\nimport Saved from \"./pages/Saved\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={Search} />\r\n        <Route exact path=\"/saved\" component={Saved} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n\n"],"sourceRoot":""}